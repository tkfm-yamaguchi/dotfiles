# use zsh for OSX installed via homebrew
if-shell 'test "$(uname -s)" = Darwin' \
    'set-option -g default-shell /usr/local/bin/zsh'

# vi mode
set-window-option -g mode-keys vi

# set prefix key to C-1
set -g prefix C-t
unbind C-b
bind C-t send-prefix

# 256 colours terminal
set-option -g default-terminal screen-256color

# reload configurtaion
# ERROR: couldn't establish current session **
# bind-key r source-file ~/.tmux.conf; display-message "Reload Config!!"

# mouse binding
set -g mode-mouse on
set -g mouse-resize-pane on
set -g mouse-select-pane on
set -g mouse-select-window on

# ssh: http://d.hatena.ne.jp/mobcov/20111217/1324093662
unbind s
bind-key s command-prompt "new-window -n ssh 'ssh -t %1'"
bind-key ^s command-prompt "split-window -h 'ssh -t %1'"
bind-key S command-prompt "split-window 'ssh -t %1'"


# clipboard copy
# for OSX
if-shell 'test "$(uname -s)" = Darwin' \
    'bind-key > run-shell "tmux save-buffer - | reattach-to-user-namespace pbcopy ; tmux display-message copied"'
# for Linux
if-shell 'which xsel >/dev/null 2>&1' \
    'bind-key > run-shell "tmux save-buffer - | xsel -i -b ; tmux display-message copied"'

# set current directory path (result of pwd) to clipboard
#bind-key z run-shell 'pwd | tr -d "\n" | xsel -i -b' \; display-message "pwd clipped !"
#bind-key z run-shell 'echo $PWD | tr -d "\n" | xsel -i -b' \; display-message "pwd clipped !"
# FIXME: commands remain on shell ... are there any option like <silent> ?  
bind-key z send-keys "pwd | tr -d '\\n' | xsel -i -b\n" \; display-message "pwd clipped !"

# resize buffer with hjkl
bind-key H resize-pane -L 10
bind-key L resize-pane -R 10
bind-key J resize-pane -D 5
bind-key K resize-pane -U 5

bind-key h select-pane -L
bind-key l select-pane -R
bind-key j select-pane -D
bind-key k select-pane -U

# move window (duplicated with command which has not ctrl)
bind-key C-n next-window
bind-key C-p previous-window

# save current pain(history?) to clipboard 
bind-key C run "tmux capture-pane -S -10000; tmux show-buffer | xsel -i -b"

# copy-mode ^[
unbind ^"["
bind -r ^"[" copy-mode
unbind ^]
bind -r ^] paste-buffer

# hand over the pwd when split/create window
bind c new-window -c "#{pane_current_path}"
bind % split-window -hc "#{pane_current_path}"
bind '"' split-window -vc "#{pane_current_path}"

# ステータスラインカスタム関連
#
# FYI
# Status Line · zolrath/wemux Wiki : https://github.com/zolrath/wemux/wiki/Status-Line
#
# Macでtmuxのステータスラインに起動時間/ロードアベレージ/メモリ使用率を表示
# よんちゅBlog : http://d.hatena.ne.jp/yonchu/20120414/1334422075
# FIXME: Ubuntu 2d のターミナルカラーがおかしい．
set -g status-attr dim
set -g status-left-length 32
set -g status-right-length 150

set -g status-fg white
set -g status-bg colour234
# set -g window-status-activity-attr bold
set -g pane-border-fg colour245
set -g pane-active-border-fg colour39

set -g status-left '#[fg=colour0,bg=colour22,bold] #20(hostname -s)#[deafult] #S #[fg=colour22,bg=colour238,nobold]⮀#[fg=colour245,bg=colour238,bold] #(whoami)#[fg=colour238,bg=colour234,nobold]⮀'
#set -g status-left '#[fg=colour223,bg=colour202,bold] #20(hostname -s)#[deafult] #S #[fg=colour202,bg=colour238,nobold]⮀#[fg=colour245,bg=colour238,bold] #(whoami) #[fg=colour238,bg=colour234,nobold]⮀'
set -g window-status-format "#[fg=white,bg=colour234] #I #W"
set -g window-status-current-format "#[fg=colour234,bg=colour39]⮀#[fg=white,bg=colour39,noreverse,bold] #I ⮁ #W #[fg=colour39,bg=colour234,bold]⮀"
#set -g status-right '#[fg=white]#H ⮃ #I:#P #[fg=colour31,bg=colour234,nobold]⮂#[fg=white,bg=colour31] Mem #(used-mem)%% ⮃ LAve.[#(loadaverage)] #[bg=colour31,fg=colour255,nobold]⮂#[fg=colour31,bg=colour255,bold] %Y/%m/%d(%a)%H:%M#[default]'
set -g status-right '#[bg=colour234,fg=colour255,nobold]⮂#[fg=colour31,bg=colour255,bold] %Y/%m/%d(%a)%H:%M#[default]'
set -g message-attr bold
set -g message-fg white
set -g message-bg red
set-option -g status-interval 3


# ウィンドウクローズ時にウィンドウ番号を詰める
set-option -g renumber-windows on
